{"ast":null,"code":"import ModalComponent from \"./components/ModalComponent.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    ModalComponent\n  },\n\n  data() {\n    return {\n      newUpdate: \"\",\n      viewModal: false,\n      tasks: [],\n      taskInput: \"\"\n    };\n  },\n\n  methods: {\n    addTask() {\n      this.tasks.push({\n        text: this.taskInput,\n        date: Date().toString(\"YYYY-MM-dd\").slice(0, 24)\n      });\n      this.taskInput = \"\";\n    },\n\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n\n    updateTask() {\n      this.viewModal = true;\n    },\n\n    updateEnd(newUpdate, index) {\n      this.tasks.splice(index, 1, {\n        text: newUpdate,\n        date: Date().toString(\"YYYY-MM-dd\").slice(0, 24)\n      });\n      this.viewModal = false;\n    },\n\n    exit() {\n      this.viewModal = false;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkGA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,eAAe;EACbC,IAAI,EAAE,KADO;EAEbC,UAAU,EAAE;IACVF;EADU,CAFC;;EAKbG,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,EADN;MAELC,SAAS,EAAE,KAFN;MAGLC,KAAK,EAAE,EAHF;MAILC,SAAS,EAAE;IAJN,CAAP;EAMD,CAZY;;EAabC,OAAO,EAAE;IACPC,OAAO,GAAG;MACR,KAAKH,KAAL,CAAWI,IAAX,CAAgB;QACdC,IAAI,EAAE,KAAKJ,SADG;QAEdK,IAAI,EAAEC,IAAI,GAAGC,QAAP,CAAgB,YAAhB,EAA8BC,KAA9B,CAAoC,CAApC,EAAuC,EAAvC;MAFQ,CAAhB;MAIA,KAAKR,SAAL,GAAiB,EAAjB;IACD,CAPM;;IAQPS,UAAU,CAACC,KAAD,EAAQ;MAChB,KAAKX,KAAL,CAAWY,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;IACD,CAVM;;IAWPE,UAAU,GAAG;MACX,KAAKd,SAAL,GAAiB,IAAjB;IACD,CAbM;;IAcPe,SAAS,CAAChB,SAAD,EAAYa,KAAZ,EAAmB;MAC1B,KAAKX,KAAL,CAAWY,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB,EAA4B;QAC1BN,IAAI,EAAEP,SADoB;QAE1BQ,IAAI,EAAEC,IAAI,GAAGC,QAAP,CAAgB,YAAhB,EAA8BC,KAA9B,CAAoC,CAApC,EAAuC,EAAvC;MAFoB,CAA5B;MAIA,KAAKV,SAAL,GAAiB,KAAjB;IACD,CApBM;;IAqBPgB,IAAI,GAAG;MACL,KAAKhB,SAAL,GAAiB,KAAjB;IACD;;EAvBM;AAbI,CAAf","names":["ModalComponent","name","components","data","newUpdate","viewModal","tasks","taskInput","methods","addTask","push","text","date","Date","toString","slice","deleteTask","index","splice","updateTask","updateEnd","exit"],"sourceRoot":"","sources":["C:\\Users\\Julien\\Downloads\\todo-list-app-ui\\todo-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"w-full h-screen bg-gray-100 pt-8\">\n    <div class=\"bg-white p-3 max-w-md mx-auto\">\n      <div class=\"text-center\">\n        <h1 class=\"text-3xl font-bold\">ToDo App</h1>\n        <div class=\"mt-4 flex\">\n          <input\n            class=\"w-80 border-b-2 border-gray-500 text-black\"\n            type=\"text\"\n            placeholder=\"Enter your task here\"\n            v-model=\"taskInput\"\n          />\n          <button\n            class=\"ml-2 border-2 border-green-500 p-2 text-green-500 hover:text-white hover:bg-green-500 rounded-lg flex\"\n            @click=\"addTask\"\n          >\n            <svg\n              class=\"h-6 w-6 text-green-600\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div class=\"mt-8\">\n        <ul>\n          <li\n            class=\"p-2 rounded-lg\"\n            v-for=\"(task, index) in this.tasks\"\n            :key=\"index\"\n          >\n            <div class=\"flex align-middle flex-row justify-between\">\n              <div class=\"p-2\">\n                <input type=\"checkbox\" class=\"h-6 w-6\" />\n              </div>\n              <div class=\"p-2\" v-on:dblclick=\"updateTask(index)\">\n                <p class=\"text-lg text-gray-400 break-all\">\n                  {{ task.text }}\n                </p>\n                <p class=\"text-xs text-gray-400\">\n                  {{ task.date }}\n                </p>\n              </div>\n              <button\n                class=\"flex text-red-500 border-2 border-red-500 max-h-10 max-w-none p-2 rounded-lg hover:text-white hover:bg-red-500\"\n                @click=\"deleteTask(index)\"\n              >\n                <svg\n                  class=\"h-6 w-6\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  stroke-width=\"2\"\n                  stroke=\"currentColor\"\n                  fill=\"none\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n                  <line x1=\"4\" y1=\"7\" x2=\"20\" y2=\"7\" />\n                  <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n                  <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n                  <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                  <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                </svg>\n              </button>\n            </div>\n            <hr class=\"mt-2\" />\n            <ModalComponent\n              v-if=\"this.viewModal\"\n              @quit=\"exit()\"\n              @update=\"updateEnd(index)\"\n              v-bind:text=\"task.text\"\n            />\n          </li>\n        </ul>\n      </div>\n      <div class=\"mt-8\">\n        <button class=\"border-2 border-red-500 p-2 text-red-500\">\n          Clear Completed Task\n        </button>\n        <button class=\"border-2 border-indigo-500 p-2 text-indigo-500 ml-4\">\n          Reset Todo List\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ModalComponent from \"./components/ModalComponent.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    ModalComponent,\n  },\n  data() {\n    return {\n      newUpdate: \"\",\n      viewModal: false,\n      tasks: [],\n      taskInput: \"\",\n    };\n  },\n  methods: {\n    addTask() {\n      this.tasks.push({\n        text: this.taskInput,\n        date: Date().toString(\"YYYY-MM-dd\").slice(0, 24),\n      });\n      this.taskInput = \"\";\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n    updateTask() {\n      this.viewModal = true;\n    },\n    updateEnd(newUpdate, index) {\n      this.tasks.splice(index, 1, {\n        text: newUpdate,\n        date: Date().toString(\"YYYY-MM-dd\").slice(0, 24),\n      });\n      this.viewModal = false;\n    },\n    exit() {\n      this.viewModal = false;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}